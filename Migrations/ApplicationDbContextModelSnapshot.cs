// <auto-generated />
using System;
using MagicVilla_API.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Modelo.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MetrosCuadrados")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenidad = "Equitación, cata de vinos",
                            Detalle = "Villa con viñedos en Touluse",
                            FechaActualizacion = new DateTime(2023, 6, 20, 11, 24, 47, 547, DateTimeKind.Local).AddTicks(5468),
                            FechaCreacion = new DateTime(2023, 6, 20, 11, 24, 47, 547, DateTimeKind.Local).AddTicks(5455),
                            ImagenUrl = "",
                            MetrosCuadrados = 70.0,
                            Nombre = "Villa Francesa",
                            Ocupantes = 12,
                            Tarifa = 500.0
                        },
                        new
                        {
                            Id = 2,
                            Amenidad = "Nado en aguas heladas, bajo el cálido sol de la costa",
                            Detalle = "Villa con vista al cristalino mar",
                            FechaActualizacion = new DateTime(2023, 6, 20, 11, 24, 47, 547, DateTimeKind.Local).AddTicks(5471),
                            FechaCreacion = new DateTime(2023, 6, 20, 11, 24, 47, 547, DateTimeKind.Local).AddTicks(5470),
                            ImagenUrl = "",
                            MetrosCuadrados = 40.0,
                            Nombre = "Villa Mediterranea",
                            Ocupantes = 8,
                            Tarifa = 800.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
